// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/pp-test.proto

package test

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReceivedMessage_Source int32

const (
	ReceivedMessage_NO_SOURCE ReceivedMessage_Source = 0
	ReceivedMessage_MQTT      ReceivedMessage_Source = 1
	ReceivedMessage_KAFKA     ReceivedMessage_Source = 2
	ReceivedMessage_TIMESCALE ReceivedMessage_Source = 3
)

var ReceivedMessage_Source_name = map[int32]string{
	0: "NO_SOURCE",
	1: "MQTT",
	2: "KAFKA",
	3: "TIMESCALE",
}

var ReceivedMessage_Source_value = map[string]int32{
	"NO_SOURCE": 0,
	"MQTT":      1,
	"KAFKA":     2,
	"TIMESCALE": 3,
}

func (x ReceivedMessage_Source) String() string {
	return proto.EnumName(ReceivedMessage_Source_name, int32(x))
}

func (ReceivedMessage_Source) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e21052dbfc6a166d, []int{0, 0}
}

type ReceivedMessage struct {
	Source               ReceivedMessage_Source `protobuf:"varint,1,opt,name=source,proto3,enum=test.ReceivedMessage_Source" json:"source,omitempty"`
	Type                 string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	DeviceEUI            string                 `protobuf:"bytes,3,opt,name=deviceEUI,proto3" json:"deviceEUI,omitempty"`
	Timestamp            string                 `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Content              string                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ReceivedMessage) Reset()         { *m = ReceivedMessage{} }
func (m *ReceivedMessage) String() string { return proto.CompactTextString(m) }
func (*ReceivedMessage) ProtoMessage()    {}
func (*ReceivedMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_e21052dbfc6a166d, []int{0}
}

func (m *ReceivedMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceivedMessage.Unmarshal(m, b)
}
func (m *ReceivedMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceivedMessage.Marshal(b, m, deterministic)
}
func (m *ReceivedMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceivedMessage.Merge(m, src)
}
func (m *ReceivedMessage) XXX_Size() int {
	return xxx_messageInfo_ReceivedMessage.Size(m)
}
func (m *ReceivedMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceivedMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ReceivedMessage proto.InternalMessageInfo

func (m *ReceivedMessage) GetSource() ReceivedMessage_Source {
	if m != nil {
		return m.Source
	}
	return ReceivedMessage_NO_SOURCE
}

func (m *ReceivedMessage) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ReceivedMessage) GetDeviceEUI() string {
	if m != nil {
		return m.DeviceEUI
	}
	return ""
}

func (m *ReceivedMessage) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *ReceivedMessage) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type Response struct {
	Reply                string   `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_e21052dbfc6a166d, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetReply() string {
	if m != nil {
		return m.Reply
	}
	return ""
}

func init() {
	proto.RegisterEnum("test.ReceivedMessage_Source", ReceivedMessage_Source_name, ReceivedMessage_Source_value)
	proto.RegisterType((*ReceivedMessage)(nil), "test.ReceivedMessage")
	proto.RegisterType((*Response)(nil), "test.Response")
}

func init() { proto.RegisterFile("proto/pp-test.proto", fileDescriptor_e21052dbfc6a166d) }

var fileDescriptor_e21052dbfc6a166d = []byte{
	// 279 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x9b, 0x36, 0x89, 0xcd, 0x88, 0x35, 0x8e, 0x0a, 0x8b, 0xf4, 0x10, 0x72, 0xea, 0xc5,
	0x08, 0xd5, 0x9b, 0x5e, 0x42, 0x89, 0x50, 0x62, 0x0c, 0x6e, 0xd2, 0xb3, 0xd4, 0x74, 0x90, 0x80,
	0x4d, 0x96, 0xec, 0x5a, 0xe8, 0x9f, 0xf6, 0x37, 0x48, 0x36, 0x8d, 0x82, 0x78, 0x9b, 0xf7, 0xde,
	0xb7, 0xcc, 0xce, 0x83, 0x73, 0xd1, 0xd4, 0xaa, 0xbe, 0x11, 0xe2, 0x5a, 0x91, 0x54, 0x81, 0x56,
	0x68, 0xb6, 0xb3, 0xff, 0x65, 0xc0, 0x29, 0xa7, 0x82, 0xca, 0x1d, 0x6d, 0x12, 0x92, 0x72, 0xfd,
	0x4e, 0x78, 0x07, 0xb6, 0xac, 0x3f, 0x9b, 0x82, 0x98, 0xe1, 0x19, 0xb3, 0xc9, 0x7c, 0x1a, 0xe8,
	0x67, 0x7f, 0xb0, 0x20, 0xd3, 0x0c, 0x3f, 0xb0, 0x88, 0x60, 0xaa, 0xbd, 0x20, 0x36, 0xf4, 0x8c,
	0x99, 0xc3, 0xf5, 0x8c, 0x53, 0x70, 0x36, 0xb4, 0x2b, 0x0b, 0x8a, 0x56, 0x4b, 0x36, 0xd2, 0xc1,
	0xaf, 0xd1, 0xa6, 0xaa, 0xdc, 0x92, 0x54, 0xeb, 0xad, 0x60, 0x66, 0x97, 0xfe, 0x18, 0xc8, 0xe0,
	0xa8, 0xa8, 0x2b, 0x45, 0x95, 0x62, 0x96, 0xce, 0x7a, 0xe9, 0xdf, 0x83, 0xdd, 0xed, 0xc6, 0x13,
	0x70, 0x9e, 0xd3, 0xd7, 0x2c, 0x5d, 0xf1, 0x45, 0xe4, 0x0e, 0x70, 0x0c, 0x66, 0xf2, 0x92, 0xe7,
	0xae, 0x81, 0x0e, 0x58, 0x71, 0xf8, 0x18, 0x87, 0xee, 0xb0, 0x65, 0xf2, 0x65, 0x12, 0x65, 0x8b,
	0xf0, 0x29, 0x72, 0x47, 0xbe, 0x07, 0x63, 0x4e, 0x52, 0xd4, 0x95, 0x24, 0xbc, 0x00, 0xab, 0x21,
	0xf1, 0xb1, 0xd7, 0x77, 0x3a, 0xbc, 0x13, 0xf3, 0x18, 0x8e, 0x73, 0x92, 0x2a, 0xa3, 0xa6, 0xfd,
	0x28, 0x3e, 0xc0, 0x59, 0x5a, 0x1d, 0x6e, 0xee, 0x2b, 0xc0, 0xcb, 0x7f, 0x2b, 0xb9, 0x9a, 0xf4,
	0x76, 0xb7, 0xc0, 0x1f, 0xbc, 0xd9, 0xba, 0xec, 0xdb, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xcc,
	0xd1, 0x66, 0xf4, 0x83, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TestServiceClient is the client API for TestService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TestServiceClient interface {
	OnMessageReceived(ctx context.Context, in *ReceivedMessage, opts ...grpc.CallOption) (*Response, error)
}

type testServiceClient struct {
	cc *grpc.ClientConn
}

func NewTestServiceClient(cc *grpc.ClientConn) TestServiceClient {
	return &testServiceClient{cc}
}

func (c *testServiceClient) OnMessageReceived(ctx context.Context, in *ReceivedMessage, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/test.TestService/OnMessageReceived", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TestServiceServer is the server API for TestService service.
type TestServiceServer interface {
	OnMessageReceived(context.Context, *ReceivedMessage) (*Response, error)
}

// UnimplementedTestServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTestServiceServer struct {
}

func (*UnimplementedTestServiceServer) OnMessageReceived(ctx context.Context, req *ReceivedMessage) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OnMessageReceived not implemented")
}

func RegisterTestServiceServer(s *grpc.Server, srv TestServiceServer) {
	s.RegisterService(&_TestService_serviceDesc, srv)
}

func _TestService_OnMessageReceived_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReceivedMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestServiceServer).OnMessageReceived(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/test.TestService/OnMessageReceived",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestServiceServer).OnMessageReceived(ctx, req.(*ReceivedMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _TestService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "test.TestService",
	HandlerType: (*TestServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "OnMessageReceived",
			Handler:    _TestService_OnMessageReceived_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/pp-test.proto",
}
