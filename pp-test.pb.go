// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pp-test.proto

package testreceiver

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReceivedMessage_Source int32

const (
	ReceivedMessage_NO_SOURCE ReceivedMessage_Source = 0
	ReceivedMessage_MQTT      ReceivedMessage_Source = 1
	ReceivedMessage_KAFKA     ReceivedMessage_Source = 2
	ReceivedMessage_TIMESCALE ReceivedMessage_Source = 3
)

var ReceivedMessage_Source_name = map[int32]string{
	0: "NO_SOURCE",
	1: "MQTT",
	2: "KAFKA",
	3: "TIMESCALE",
}

var ReceivedMessage_Source_value = map[string]int32{
	"NO_SOURCE": 0,
	"MQTT":      1,
	"KAFKA":     2,
	"TIMESCALE": 3,
}

func (x ReceivedMessage_Source) String() string {
	return proto.EnumName(ReceivedMessage_Source_name, int32(x))
}

func (ReceivedMessage_Source) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a04cf5b57750b424, []int{0, 0}
}

type ReceivedMessage_MessageType int32

const (
	ReceivedMessage_NO_TYPE         ReceivedMessage_MessageType = 0
	ReceivedMessage_ALARM           ReceivedMessage_MessageType = 1
	ReceivedMessage_ENERGY          ReceivedMessage_MessageType = 2
	ReceivedMessage_GATEWAY         ReceivedMessage_MessageType = 3
	ReceivedMessage_GEOSCAN         ReceivedMessage_MessageType = 4
	ReceivedMessage_HARMONICS_LOWER ReceivedMessage_MessageType = 5
	ReceivedMessage_HARMONICS_UPPER ReceivedMessage_MessageType = 6
	ReceivedMessage_INST            ReceivedMessage_MessageType = 7
	ReceivedMessage_PQ              ReceivedMessage_MessageType = 8
	ReceivedMessage_PQEVENT         ReceivedMessage_MessageType = 9
	ReceivedMessage_PROCESSED       ReceivedMessage_MessageType = 10
	ReceivedMessage_S11PQ           ReceivedMessage_MessageType = 11
	ReceivedMessage_UPLINK          ReceivedMessage_MessageType = 12
	ReceivedMessage_VOLTAGE_STATS   ReceivedMessage_MessageType = 13
)

var ReceivedMessage_MessageType_name = map[int32]string{
	0:  "NO_TYPE",
	1:  "ALARM",
	2:  "ENERGY",
	3:  "GATEWAY",
	4:  "GEOSCAN",
	5:  "HARMONICS_LOWER",
	6:  "HARMONICS_UPPER",
	7:  "INST",
	8:  "PQ",
	9:  "PQEVENT",
	10: "PROCESSED",
	11: "S11PQ",
	12: "UPLINK",
	13: "VOLTAGE_STATS",
}

var ReceivedMessage_MessageType_value = map[string]int32{
	"NO_TYPE":         0,
	"ALARM":           1,
	"ENERGY":          2,
	"GATEWAY":         3,
	"GEOSCAN":         4,
	"HARMONICS_LOWER": 5,
	"HARMONICS_UPPER": 6,
	"INST":            7,
	"PQ":              8,
	"PQEVENT":         9,
	"PROCESSED":       10,
	"S11PQ":           11,
	"UPLINK":          12,
	"VOLTAGE_STATS":   13,
}

func (x ReceivedMessage_MessageType) String() string {
	return proto.EnumName(ReceivedMessage_MessageType_name, int32(x))
}

func (ReceivedMessage_MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a04cf5b57750b424, []int{0, 1}
}

type ReceivedMessage struct {
	Source               ReceivedMessage_Source      `protobuf:"varint,1,opt,name=source,proto3,enum=testreceiver.ReceivedMessage_Source" json:"source,omitempty"`
	Type                 ReceivedMessage_MessageType `protobuf:"varint,2,opt,name=type,proto3,enum=testreceiver.ReceivedMessage_MessageType" json:"type,omitempty"`
	DeviceEUI            string                      `protobuf:"bytes,3,opt,name=deviceEUI,proto3" json:"deviceEUI,omitempty"`
	Timestamp            string                      `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Phase                int32                       `protobuf:"varint,5,opt,name=phase,proto3" json:"phase,omitempty"`
	Content              string                      `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ReceivedMessage) Reset()         { *m = ReceivedMessage{} }
func (m *ReceivedMessage) String() string { return proto.CompactTextString(m) }
func (*ReceivedMessage) ProtoMessage()    {}
func (*ReceivedMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_a04cf5b57750b424, []int{0}
}

func (m *ReceivedMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceivedMessage.Unmarshal(m, b)
}
func (m *ReceivedMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceivedMessage.Marshal(b, m, deterministic)
}
func (m *ReceivedMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceivedMessage.Merge(m, src)
}
func (m *ReceivedMessage) XXX_Size() int {
	return xxx_messageInfo_ReceivedMessage.Size(m)
}
func (m *ReceivedMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceivedMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ReceivedMessage proto.InternalMessageInfo

func (m *ReceivedMessage) GetSource() ReceivedMessage_Source {
	if m != nil {
		return m.Source
	}
	return ReceivedMessage_NO_SOURCE
}

func (m *ReceivedMessage) GetType() ReceivedMessage_MessageType {
	if m != nil {
		return m.Type
	}
	return ReceivedMessage_NO_TYPE
}

func (m *ReceivedMessage) GetDeviceEUI() string {
	if m != nil {
		return m.DeviceEUI
	}
	return ""
}

func (m *ReceivedMessage) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *ReceivedMessage) GetPhase() int32 {
	if m != nil {
		return m.Phase
	}
	return 0
}

func (m *ReceivedMessage) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type Response struct {
	Reply                string   `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_a04cf5b57750b424, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetReply() string {
	if m != nil {
		return m.Reply
	}
	return ""
}

func init() {
	proto.RegisterEnum("testreceiver.ReceivedMessage_Source", ReceivedMessage_Source_name, ReceivedMessage_Source_value)
	proto.RegisterEnum("testreceiver.ReceivedMessage_MessageType", ReceivedMessage_MessageType_name, ReceivedMessage_MessageType_value)
	proto.RegisterType((*ReceivedMessage)(nil), "testreceiver.ReceivedMessage")
	proto.RegisterType((*Response)(nil), "testreceiver.Response")
}

func init() { proto.RegisterFile("pp-test.proto", fileDescriptor_a04cf5b57750b424) }

var fileDescriptor_a04cf5b57750b424 = []byte{
	// 451 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0x4f, 0x6f, 0xd3, 0x4e,
	0x10, 0xad, 0x13, 0xdb, 0x89, 0x27, 0xc9, 0xaf, 0xdb, 0xfd, 0x21, 0x64, 0x21, 0x90, 0x22, 0x8b,
	0x43, 0x38, 0x10, 0xa9, 0xe5, 0x08, 0x1c, 0x56, 0x66, 0x09, 0x56, 0xfc, 0x2f, 0xbb, 0x9b, 0x56,
	0x91, 0x90, 0xa2, 0x90, 0x8e, 0x20, 0x12, 0x8d, 0x2d, 0x7b, 0xa9, 0x94, 0x4f, 0xc0, 0xa7, 0xe3,
	0x3b, 0xa1, 0xb5, 0x53, 0x28, 0x3d, 0xf4, 0x64, 0xbf, 0x99, 0xf7, 0x66, 0x9f, 0xe6, 0x0d, 0x8c,
	0xca, 0xf2, 0xb5, 0xc6, 0x5a, 0x4f, 0xcb, 0xaa, 0xd0, 0x05, 0x1d, 0x9a, 0xff, 0x0a, 0xb7, 0xb8,
	0xbb, 0xc5, 0x2a, 0xf8, 0x69, 0xc3, 0xa9, 0x68, 0xc1, 0x75, 0x82, 0x75, 0xbd, 0xf9, 0x8a, 0xf4,
	0x1d, 0xb8, 0x75, 0xf1, 0xa3, 0xda, 0xa2, 0x6f, 0x8d, 0xad, 0xc9, 0x7f, 0x17, 0x2f, 0xa7, 0xf7,
	0x25, 0xd3, 0x07, 0xf4, 0xa9, 0x6c, 0xb8, 0xe2, 0xa8, 0xa1, 0xef, 0xc1, 0xd6, 0x87, 0x12, 0xfd,
	0x4e, 0xa3, 0x7d, 0xf5, 0xb8, 0xf6, 0xf8, 0x55, 0x87, 0x12, 0x45, 0x23, 0xa3, 0xcf, 0xc1, 0xbb,
	0xc6, 0xdb, 0xdd, 0x16, 0xf9, 0x32, 0xf2, 0xbb, 0x63, 0x6b, 0xe2, 0x89, 0xbf, 0x05, 0xd3, 0xd5,
	0xbb, 0x1b, 0xac, 0xf5, 0xe6, 0xa6, 0xf4, 0xed, 0xb6, 0xfb, 0xa7, 0x40, 0x9f, 0x80, 0x53, 0x7e,
	0xdb, 0xd4, 0xe8, 0x3b, 0x63, 0x6b, 0xe2, 0x88, 0x16, 0x50, 0x1f, 0x7a, 0xdb, 0x62, 0xaf, 0x71,
	0xaf, 0x7d, 0xb7, 0x51, 0xdc, 0xc1, 0xe0, 0x2d, 0xb8, 0xad, 0x79, 0x3a, 0x02, 0x2f, 0xcd, 0xd6,
	0x32, 0x5b, 0x8a, 0x90, 0x93, 0x13, 0xda, 0x07, 0x3b, 0x59, 0x28, 0x45, 0x2c, 0xea, 0x81, 0x33,
	0x67, 0x1f, 0xe7, 0x8c, 0x74, 0x0c, 0x47, 0x45, 0x09, 0x97, 0x21, 0x8b, 0x39, 0xe9, 0x06, 0xbf,
	0x2c, 0x18, 0xdc, 0xb3, 0x4f, 0x07, 0xd0, 0x4b, 0xb3, 0xb5, 0x5a, 0xe5, 0x66, 0x80, 0x07, 0x0e,
	0x8b, 0x99, 0x48, 0x88, 0x45, 0x01, 0x5c, 0x9e, 0x72, 0x31, 0x5b, 0x91, 0x8e, 0xe1, 0xcc, 0x98,
	0xe2, 0x57, 0x6c, 0x45, 0xba, 0x0d, 0xe0, 0x99, 0x0c, 0x59, 0x4a, 0x6c, 0xfa, 0x3f, 0x9c, 0x7e,
	0x62, 0x22, 0xc9, 0xd2, 0x28, 0x94, 0xeb, 0x38, 0xbb, 0xe2, 0x82, 0x38, 0xff, 0x16, 0x97, 0x79,
	0xce, 0x05, 0x71, 0x8d, 0xb7, 0x28, 0x95, 0x8a, 0xf4, 0xa8, 0x0b, 0x9d, 0x7c, 0x41, 0xfa, 0x66,
	0x50, 0xbe, 0xe0, 0x97, 0x3c, 0x55, 0xc4, 0x33, 0x2e, 0x73, 0x91, 0x85, 0x5c, 0x4a, 0xfe, 0x81,
	0x80, 0x31, 0x22, 0xcf, 0xcf, 0xf3, 0x05, 0x19, 0x18, 0x23, 0xcb, 0x3c, 0x8e, 0xd2, 0x39, 0x19,
	0xd2, 0x33, 0x18, 0x5d, 0x66, 0xb1, 0x62, 0x33, 0xbe, 0x96, 0x8a, 0x29, 0x49, 0x46, 0xc1, 0x18,
	0xfa, 0x02, 0xeb, 0xb2, 0xd8, 0xd7, 0x68, 0x16, 0x59, 0x61, 0xf9, 0xfd, 0xd0, 0x1c, 0x80, 0x27,
	0x5a, 0x70, 0xf1, 0x19, 0x86, 0x0a, 0x6b, 0x7d, 0xcc, 0xb0, 0xa2, 0x31, 0x9c, 0x65, 0xfb, 0xe3,
	0x0a, 0xee, 0x82, 0xa5, 0x2f, 0x1e, 0x0d, 0xfc, 0xd9, 0xd3, 0x87, 0xed, 0xf6, 0xc5, 0xe0, 0xe4,
	0x8b, 0xdb, 0x9c, 0xe7, 0x9b, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x24, 0xcb, 0x2a, 0xbe, 0xaf,
	0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TestReceiverClient is the client API for TestReceiver service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TestReceiverClient interface {
	OnMessageReceived(ctx context.Context, in *ReceivedMessage, opts ...grpc.CallOption) (*Response, error)
}

type testReceiverClient struct {
	cc *grpc.ClientConn
}

func NewTestReceiverClient(cc *grpc.ClientConn) TestReceiverClient {
	return &testReceiverClient{cc}
}

func (c *testReceiverClient) OnMessageReceived(ctx context.Context, in *ReceivedMessage, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/testreceiver.TestReceiver/OnMessageReceived", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TestReceiverServer is the server API for TestReceiver service.
type TestReceiverServer interface {
	OnMessageReceived(context.Context, *ReceivedMessage) (*Response, error)
}

// UnimplementedTestReceiverServer can be embedded to have forward compatible implementations.
type UnimplementedTestReceiverServer struct {
}

func (*UnimplementedTestReceiverServer) OnMessageReceived(ctx context.Context, req *ReceivedMessage) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OnMessageReceived not implemented")
}

func RegisterTestReceiverServer(s *grpc.Server, srv TestReceiverServer) {
	s.RegisterService(&_TestReceiver_serviceDesc, srv)
}

func _TestReceiver_OnMessageReceived_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReceivedMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestReceiverServer).OnMessageReceived(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testreceiver.TestReceiver/OnMessageReceived",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestReceiverServer).OnMessageReceived(ctx, req.(*ReceivedMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _TestReceiver_serviceDesc = grpc.ServiceDesc{
	ServiceName: "testreceiver.TestReceiver",
	HandlerType: (*TestReceiverServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "OnMessageReceived",
			Handler:    _TestReceiver_OnMessageReceived_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pp-test.proto",
}
